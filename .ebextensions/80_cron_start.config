# Cron task configuration required for this project.
# These will be executed on web EC2 units instead of a worker unit such that they can be scaled as needed.
# All cron tasks should be executed as webapp for security.
container_commands:
  80_webapp_home:
    command: mkdir -p /home/webapp
  81_webapp_permission:
    command: chown -R webapp:webapp /home/webapp
  82_remove_previous_cron_webapp:
    command: crontab -u webapp -r || exit 0
  83_remove_previous_cron_root:
    command: crontab -u root -r || exit 0
  84_remove_previous_cron_backups:
    command: rm -f /etc/cron.d/*.bak

files:
  "/etc/cron.d/project":
    mode: "000644"
    owner: root
    group: root
    content: |
      # For simplicity these tasks make use of an alias 'cron' created in the mautic config file within .ebextensions.
      # See documentation for these cron jobs at https://mautic.org/docs/en/setup/cron_jobs.html

      # SEGMENTS
      # To keep the segments current.
      # Run up to 3 batches of 300 contacts per segment, then move on to the next.
      */10 * * * * root cronloop mautic:segments:update --max-contacts=1000 --batch-limit=1000 --quiet >/dev/null 2>&1

      # CAMPAIGNS
      # To keep campaigns updated with applicable contacts.
      # Run up to 3 batches of 300 contacts per campaign, then move on to the next.
      */10 * * * * root cronloop mautic:campaigns:rebuild --max-contacts=1000 --batch-limit=1000 --quiet >/dev/null 2>&1
      # To execute campaigns events.
      */10 * * * * root /bin/bash /var/app/current/scripts/mautic-worker.sh >/dev/null 2>&1
      # If you don't want to use the worker script, use the following instead.
      # * * * * * root cron mautic:campaigns:trigger >/dev/null 2>&1
      # To send frequency rules rescheduled marketing campaign messages.
      2,9,16,23,30,37,44,51,58 * * * * root cron mautic:messages:send >/dev/null 2>&1

      # EMAIL
      # Process Email Queue.
      * * * * * root cron mautic:emails:send --time-limit=300 >/dev/null 2>&1
      # Fetch and Process Monitored Email.
      4,11,18,25,32,39,46,53 * * * * root cron mautic:email:fetch >/dev/null 2>&1
      # Send scheduled broadcasts / segment emails.
      5,12,19,26,33,40,47,54 * * * * root cron mautic:broadcasts:send >/dev/null 2>&1

      # SOCIAL
      # Iterates through social monitors.
      6,13,20,27,34,41,48,55 * * * * root cron mautic:social:monitoring >/dev/null 2>&1

      # WEBHOOKS
      # Send webhook payloads. These are sent in real-time by default, but should be switched to offline processing.
      7,14,21,28,35,42,49,56 * * * * root cron mautic:webhooks:process >/dev/null 2>&1

      # IMPORTS
      # To run imports in offline processing.
      * * * * * root if [ ! -d /tmp/imports ]; then sudo ln -sf /efs/mautic/imports /tmp ; fi ; console mautic:import --limit=1200 --quiet >/dev/null 2>&1

      # IP Lookup
      # Update maxmind databse at 9am on first Tuesday of each month on all instances.
      0 9 * * 2 webapp [ `date +\%d` -le 7 ] && /usr/bin/php /var/app/current/mautic/app/console mautic:iplookup:download >/dev/null 2>&1
